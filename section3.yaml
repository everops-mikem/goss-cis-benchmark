---
# CIS Ubuntu Linux 20.04 LTS Benchmark v1.1.0
#
# 3 Network Configuration
# 3.5.1.4 Ensure loopback traffic is configured (Automated): not implemented
# 3.5.1.5 Ensure outbound connections are configured (Manual): not implemented
# 3.5.1.6 Ensure firewall rules exist for all open ports (Manual): not implemented
# 3.5.1.7 Ensure default deny firewall policy (Automated): not implemented
# 3.5.2 Configure nftables - not implemented due to ufw
# 3.5.3 Configure iptables - not implemented due to ufw

kernel-param:
  {{- range list "net.ipv6.conf.all.disable_ipv6" "net.ipv6.conf.default.disable_ipv6"}}
  {{.}}:
    value: "1"
    title: "3.1.1 Disable IPv6"
    meta:
      item:
        - "3.1.1"
      level: 2
  {{end}}

  {{- range list "net.ipv4.conf.all.send_redirects" "net.ipv4.conf.default.send_redirects"}}
  {{.}}:
    value: "0"
    title: "3.2.1 Ensure packet redirect sending is disabled"
    meta:
      item:
        - "3.2.1"
      level: 1
  {{end}}

  # This 100% breaks k8s/docker
  {{- range list "net.ipv4.ip_forward" "net.ipv6.conf.all.forwarding"}}
  {{.}}:
    value: "0"
    title: "3.2.2 Ensure IP forwarding is disabled"
    meta:
      item:
        - "3.2.2"
      level: 1
  {{end}}

  {{- range list "net.ipv4.conf.all.accept_source_route" "net.ipv4.conf.default.accept_source_route" "net.ipv6.conf.all.accept_source_route" "net.ipv6.conf.default.accept_source_route"}}
  {{.}}:
    value: "0"
    title: "3.3.1 Ensure source routed packets are not accepted"
    meta:
      item:
        - "3.3.1"
      level: 1
  {{end}}

  {{- range list "net.ipv4.conf.all.accept_redirects" "net.ipv4.conf.default.accept_redirects" "net.ipv6.conf.all.accept_redirects" "net.ipv6.conf.default.accept_redirects"}}
  {{. }}:
    value: "0"
    title: "3.3.2 Ensure ICMP redirects are not accepted"
    meta:
      item:
        - "3.3.2"
      level: 1
  {{end}}

  {{- range list "net.ipv4.conf.all.secure_redirects" "net.ipv4.conf.default.secure_redirects"}}
  {{.}}:
    value: "0"
    title: "3.3.3 Ensure secure ICMP redirects are not accepted"
    meta:
      item:
        - "3.3.3"
      level: 1
  {{end}}

  {{- range list "net.ipv4.conf.all.log_martians" "net.ipv4.conf.default.log_martians"}}
  {{.}}:
    value: "1"
    title: "3.3.4 Ensure suspicious packets are logged"
    meta:
      item:
        - "3.3.4"
      level: 1
  {{end}}

  net.ipv4.icmp_echo_ignore_broadcasts:
    value: "1"
    title: "3.3.5 Ensure broadcast ICMP requests are ignored"
    meta:
      item:
        - "3.3.5"
      level: 1

  net.ipv4.icmp_ignore_bogus_error_responses:
    value: "1"
    title: "3.3.6 Ensure bogus ICMP responses are ignored"
    meta:
      item:
        - "3.3.6"
      level: 1

  {{- range list "net.ipv4.conf.all.rp_filter" "net.ipv4.conf.default.rp_filter"}}
  {{.}}:
    value: "1"
    title: "3.3.4 Ensure suspicious packets are logged"
    meta:
      item:
        - "3.3.4"
      level: 1
  {{end}}

  net.ipv4.tcp_syncookies:
    value: "1"
    title: "3.3.8 Ensure TCP SYN Cookies is enabled"
    meta:
      item:
        - "3.3.8"
      level: 1

  {{- range list "net.ipv6.conf.all.accept_ra" "net.ipv6.conf.default.accept_ra"}}
  {{.}}:
    value: "0"
    title: "3.3.9 Ensure IPv6 router advertisements are not accepted"
    meta:
      item:
        - "3.3.9"
      level: 1
  {{end}}

command:
  bash /tmp/test_section_03_level1/3-1-2.sh:
    exit-status: 0
    stderr: [ ]
    stdout:
      - "Wireless is not enabled"
    timeout: 10000
    title: "3.1.2 Ensure wireless interfaces are disabled"
    meta:
      item:
        - "3.1.2"
      level: 1

  {{- range $k,$v := dict "dccp" "3.4.1" "sctp" "3.4.2" "rds" "3.4.3" "tipc" "3.4.4"}}
  modprobe -n -v {{$k}} 2>&1 | grep -E 'Module {{$k}} not found|install\s+/bin/(true|false)':
    exit-status: 0
    title: '{{$v}} Ensure {{$k}} is disabled'
    meta:
      item:
        - '{{$v}}'
      level: 2
  lsmod | grep {{$k}}:
    exit-status: 1
    title: '{{$v}} Ensure {{$k}} is disabled'
    meta:
      item:
        - '{{$v}}'
      level: 2
  {{end}}

package:
  {{- if eq .Vars.firewallPackage "ufw"}}
  {{.Vars.firewallPackage}}:
    installed: true
    title: "3.5.1.1 Ensure {{.Vars.firewallPackage}} is installed"
    meta:
      item:
        - "3.5.1.1"
      level: 1

  iptables-persistent:
    installed: false
    title: "3.5.1.2 Ensure iptables-persistent is not installed with {{.Vars.firewallPackage}}"
    meta:
      item:
        - "3.5.1.2"
      level: 1
  {{end}}

  {{- if eq .Vars.firewallPackage "nftables"}}
  {{.Vars.firewallPackage}}:
    installed: true
    title: "3.5.2.1 Ensure {{.Vars.firewallPackage}} is installed"
    meta:
      item:
        - "3.5.2.1"
      level: 1

  ufw:
    installed: false
    title: "3.5.2.2 Ensure ufw is not installed with {{.Vars.firewallPackage}}"
    meta:
      item:
        - "3.5.2.2"
      level: 1
  {{end}}

  {{- if eq .Vars.firewallPackage "ipables"}}
  {{- range list "iptables" "iptables-persistent"}}:
    installed: true
    title: "3.5.3.1.1 Ensure iptables packages are installed"
    meta:
      item:
        - "3.5.3.1"
      level: 1
  {{end}}

  nftables:
    installed: false
    title: "3.5.3.1.2 Ensure nftables is not installed with {{.Vars.firewallPackage}}"
    meta:
      item:
        - "3.5.3.1.2"
      level: 1
  ufw:
    installed: false
    title: "3.5.3.1.3 Ensure ufw is not installed with {{.Vars.firewallPackage}}"
    meta:
      item:
        - "3.5.2.1.3"
      level: 1
  {{end}}

service:
  {{- if eq .Vars.firewallPackage "ufw"}}
  {{.Vars.firewallPackage}}:
    enabled: true
    running: true
    title: "3.5.1.3 Ensure {{.Vars.firewallPackage}} service is enabled"
    meta:
      item:
        - "3.5.1.3"
      level: 1
  {{end}}